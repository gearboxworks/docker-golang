
################################################################################
# WARNING: This file has been auto-generated. DO NOT EDIT: WARNING
# Created on 2020-05-22T03:31:43+1000, using template:DockerfileRuntime.tmpl and json:gearbox.json
# Plain Docker container for docker-golang based off gearboxworks/gearbox-base:alpine-3.11

ARG VERSION=1.14.2

# 1. First reference the gearbox-base image.
FROM gearboxworks/gearbox-base:alpine-3.11
ARG VERSION
ARG GEARBOX_ENTRYPOINT
ARG GEARBOX_ENTRYPOINT_ARGS

# 2. Set up env variables.
MAINTAINER Gearbox Team <team@gearbox.works>
ENV GEARBOX_CONTAINER_NAME "docker-golang"
ENV GEARBOX_CONTAINER_VERSION ${VERSION}
ENV GEARBOX_ENTRYPOINT ${GEARBOX_ENTRYPOINT}
ENV GEARBOX_ENTRYPOINT_ARGS ${GEARBOX_ENTRYPOINT_ARGS}
LABEL gearbox.json='{"schema": "gear-1","meta": {"state": "production","organization": "gearboxworks","name": "golang","label": "Golang","maintainer": "Gearbox Team <team@gearbox.works>","class": "dev","refurl": "https://www.golang.org/"},"build": {"ports": {"godoc": "6060","https": "443","http": "80"},"run": "","args": "","env": {"GOLANG_USER": "gearbox"},"network": "--network gearboxnet","volumes": "","restart": "--restart no"},"run": {"commands": {"default": "/usr/local/go/bin/go","go": "/usr/local/go/bin/go","gofmt": "/usr/local/go/bin/gofmt","goreleaser": "/usr/local/bin/goreleaser","benchcmp": "/home/gearbox/go/bin/benchcmp","compilebench": "/home/gearbox/go/bin/compilebench","godex": "/home/gearbox/go/bin/godex","godoc": "/home/gearbox/go/bin/godoc","goimports": "/home/gearbox/go/bin/goimports","gomvpkg": "/home/gearbox/go/bin/gomvpkg","gorename": "/home/gearbox/go/bin/gorename","gotype": "/home/gearbox/go/bin/gotype","goyacc": "/home/gearbox/go/bin/goyacc","guru": "/home/gearbox/go/bin/guru"}},"project": {},"extensions": {},"versions": {"1.2.2": {"majorversion": "1.2","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.3.3": {"majorversion": "1.3","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.4.3": {"majorversion": "1.4","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.5.4": {"majorversion": "1.5","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.6.4": {"majorversion": "1.6","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.7.6": {"majorversion": "1.7","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.8.7": {"majorversion": "1.8","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.9.7": {"majorversion": "1.9","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.10.8": {"majorversion": "1.10","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.11.13": {"majorversion": "1.11","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.12.17": {"majorversion": "1.12","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.13.10": {"majorversion": "1.13","latest": false,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"},"1.14.2": {"majorversion": "1.14","latest": true,"ref": "","base": "gearboxworks/gearbox-base:alpine-3.11"}}}'
LABEL gearbox.version='1.14.2'
ENV GEARBOX_VERSION "1.14.2"
LABEL container.class="dev"
ENV GEARBOX_CLASS "dev"
LABEL container.label="Golang"
ENV GEARBOX_LABEL "Golang"
LABEL container.maintainer="Gearbox Team <team@gearbox.works>"
ENV GEARBOX_MAINTAINER "Gearbox Team <team@gearbox.works>"
LABEL container.name="golang"
ENV GEARBOX_NAME "golang"
LABEL container.organization="gearboxworks"
ENV GEARBOX_ORGANIZATION "gearboxworks"
LABEL container.refurl="https://www.golang.org/"
ENV GEARBOX_REFURL "https://www.golang.org/"
LABEL container.state="production"
ENV GEARBOX_STATE "production"
LABEL container.args=""
ENV GEARBOX_ARGS ""
# SKIP env
LABEL container.network="--network gearboxnet"
ENV GEARBOX_NETWORK "--network gearboxnet"
LABEL container.ports="map[godoc:6060 http:80 https:443]"
ENV GEARBOX_PORTS "map[godoc:6060 http:80 https:443]"
LABEL container.restart="--restart no"
ENV GEARBOX_RESTART "--restart no"
LABEL container.run=""
ENV GEARBOX_RUN ""
LABEL container.volumes=""
ENV GEARBOX_VOLUMES ""
LABEL container.base="gearboxworks/gearbox-base:alpine-3.11"
ENV GEARBOX_BASE "gearboxworks/gearbox-base:alpine-3.11"
LABEL container.latest="true"
ENV GEARBOX_LATEST "true"
LABEL container.majorversion="1.14"
ENV GEARBOX_MAJORVERSION "1.14"
LABEL container.ref=""
ENV GEARBOX_REF ""
ENV GOLANG_USER "gearbox"

# 3. Now copy the local files specific to this container.
COPY build /etc/gearbox
COPY versions/${VERSION}/build /etc/gearbox

# 4. Run the base.sh script to set everything up.
RUN /bin/sh /etc/gearbox/build/base.sh

# 5. Run the golang.sh script to set everything up.
RUN /bin/sh /etc/gearbox/build/golang.sh

# 6. Expose ports.
EXPOSE 22 9970 6060 80 443 
WORKDIR /home/gearbox/projects

# END
################################################################################
